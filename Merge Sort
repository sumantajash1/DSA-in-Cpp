#include <bits/stdc++.h>
using namespace std;

void merge(int arr[], int s, int e) {
    int mid = s + (e-s)/2;
    int len1 = mid - s + 1;
    int len2 = e - mid;
    int *first = new int[len1];
    int *second = new int[len2];
    int k = s;
    for(int i = 0; i < len1; i++) {
        first[i] = arr[k++];
    }
    for(int i = 0; i < len2; i++) {
        second[i] = arr[k++];
    }
    // merge two sorted arrays
    k = s;
    int index1 = 0;
    int index2 = 0;
    
    while(index1 < len1 && index2 < len2) {
        if(first[index1] < second[index2]) {
            arr[k++] = first[index1++];
        } else {
            arr[k++] = second[index2++];
        }
    }
    while(index1 < len1) {
        arr[k++] = first[index1++];
    }
    while(index2 < len2) {
        arr[k++] = second[index2++];
    }

    // Free allocated memory
    delete[] first;
    delete[] second;
}

void mergeSort(int arr[], int s, int e) {
    // base case
    if(s >= e) return;
    // calculate mid
    int mid = s + (e - s) / 2;
    // sort left part
    mergeSort(arr, s, mid);
    // sort right part
    mergeSort(arr, mid + 1, e);
    // merge
    merge(arr, s, e);
}

void PrintArray(int arr[], int n) {
    for(int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
}

int main() {
    int arr[5] = {2, 5, 1, 6, 9};
    int n = 5;
    mergeSort(arr, 0, n - 1);
    PrintArray(arr, n);
    return 0;
}
